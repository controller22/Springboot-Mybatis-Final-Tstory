<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="shop.mtcoding.tstory.model.post.PostRepository">

	<select id="postCount" resultType="shop.mtcoding.tstory.model.post.Post">
        SELECT COUNT(post_title) as postCount
		FROM post_tb
		WHERE user_id = #{userId}
		<if test="keyword != null">
			AND post_title like '%${keyword}%'
		</if>
    </select>

	<select id="findPost" resultType="shop.mtcoding.tstory.dto.post.PostAllRespDto">
          SELECT p.post_id, p.post_title, u.username, u.user_id, p.post_thumnail, p.category_id, p.created_at
		  FROM post_tb p
		  INNER JOIN user_tb u
		  ON p.user_id = u.user_id
		  WHERE p.user_id = #{userId} AND p.category_id=#{categoryId}
		  ORDER BY p.post_id DESC
    </select>

	<select id="findAllPost" resultType="shop.mtcoding.tstory.dto.post.PostAllRespDto">
          SELECT p.post_id, p.post_title, u.username, u.user_id, p.post_thumnail, p.category_id, p.created_at, u.nickname
		  FROM post_tb p
		  INNER JOIN user_tb u
		  ON p.user_id = u.user_id
		  WHERE p.user_id = #{userId} AND p.post_title like  CONCAT('%', #{keyword}, '%')
		  ORDER BY p.post_id DESC
		  OFFSET #{startNum} ROWS
		  FETCH NEXT 5 ROWS ONLY
    </select>


    <select id="findByIdUpdate" resultType="shop.mtcoding.tstory.dto.post.PostUpdateReqDto">
          SELECT post_id, post_title, post_content, post_thumnail, user_id
		  FROM post_tb 
		  WHERE post_id = #{postId}
    </select>


	<select id="findAllAndUsername" resultType="shop.mtcoding.tstory.dto.post.PostAllRespDto">
        SELECT u.user_id, p.post_id, u.username, p.post_title, p.post_thumnail, p.created_at, u.nickname
		FROM post_tb p LEFT JOIN  user_tb u ON p.user_id = u.user_id
		ORDER BY p.post_id DESC
    </select>

 	<select id="findSearchAllPost" resultType="shop.mtcoding.tstory.dto.main.KeywordRespDto">
		SELECT p.post_title, p.user_id, u.username, p.post_id, p.post_content, p.post_thumnail,u.nickname
		FROM user_tb u 
		LEFT JOIN post_tb p
		ON u.user_id = p.user_id
		WHERE p.post_title LIKE '%${keyword}%' 
		ORDER BY p.post_id DESC
    </select>

	<select id="findById"
		resultType="shop.mtcoding.tstory.model.post.Post">
		SELECT * FROM post_tb WHERE post_id=#{postId}
	</select>

	<select id="findAll"
		resultType="shop.mtcoding.tstory.model.post.Post">
		SELECT *
		FROM post_tb 
		WHERE post_id=#{postId}
	</select>

	<insert id="insert">
		INSERT
		INTO post_tb(post_title, post_content, post_thumnail, user_id, category_id, updated_at, created_at)
		VALUES(#{postTitle}, #{postContent}, #{postThumnail}, #{userId}, #{categoryId}, now(), now())
	</insert>

    <update id="update">
          UPDATE post_tb
		  SET post_title = #{postTitle},
		  post_content = #{postContent},
		  post_thumnail = #{postThumnail},
		  user_id = #{userId}
		  category_id = #{categoryId}
		  where post_id=#{postId}
    </update>

	<delete id="delete">
		DELETE FROM post_tb WHERE post_id = #{postId}
	</delete>

	<select id="findByIdAndUser" resultType="shop.mtcoding.tstory.dto.post.PostDetailDto">	
		SELECT p.user_id,p.updated_at,p.category_id,p.post_id,p.post_content,p.post_title,u.nickname,u.user_id
		FROM post_tb p 
		LEFT JOIN  user_tb u
		ON p.user_id = u.user_id
		WHERE p.post_id = #{postId}
    </select>

	<insert id="insertSave">
		INSERT
		INTO post_tb(post_title, post_content, post_thumnail, user_id, category_id, updated_at, created_at)
		VALUES(#{postTitle}, #{postContent},#{postThumnail}, #{userId}, #{categoryId}, now(), now())
	</insert>

	<select id="findAllHistory"
		resultType="shop.mtcoding.tstory.dto.admin.PostHistoryRespDto">
		SELECT row_number() over(order BY p.post_id desc) as number, p.post_title, p.created_at, u.nickname
		FROM post_tb p 
		INNER JOIN user_tb u 
		ON p.user_id = u.user_id
	</select>












	<select id="paging" resultType="shop.mtcoding.tstory.dto.paging.PagingRespDto" >
   
	SELECT p.totalCount, p.totalPage, p.currentPage,
    	(CASE currentPage WHEN 0 THEN 1 ELSE 0 END) AS first,
    	(CASE currentPage WHEN totalPage-1 THEN 1 ELSE 0 END) AS last
	FROM (
    	SELECT COUNT(*) AS totalCount, CEILING(COUNT(*)/5) AS totalPage,
		 cast(#{page} AS INT) as currentPage,
    	0 AS first, 0 AS last
    	FROM post_tb
    	WHERE user_id = #{userId}
        <if test="keyword != null">
        AND post_title like '%${keyword}%'
        </if>
		) p

    </select>











	 <update id="insertUpdate">
         UPDATE post_tb
		  SET post_title =#{postTitle},
		  post_content = #{postContent},
		  post_thumnail = #{postThumnail},
		  category_id = #{categoryId}
		  WHERE post_id = #{postId} AND user_id = #{userId}
    </update>

	<update id="insertNoUpdate">
         UPDATE post_tb
		  SET post_title =#{postTitle},
		  post_content = #{postContent},
		  post_thumnail = #{noFile},
		  category_id = #{categoryId}
		  WHERE post_id = #{postId} AND user_id = #{userId}
    </update>

<update id="updateNoThumnail">
         UPDATE post_tb
		  SET post_title =#{postTitle},
		  post_content = #{postContent},
		  post_thumnail = #{postThumnail},
		  category_id = #{categoryId}
		  WHERE post_id = #{postId} AND user_id = #{userId}
    </update>
</mapper>